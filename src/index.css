@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-slate-900;
  }

  input, textarea {
    @apply placeholder-slate-500;
  }
}

@layer components {
  .skill-card {
    @apply relative bg-slate-800/30 rounded-xl p-6 hover:bg-slate-800/50 transition-all duration-300;
  }
  
  .skill-card::before {
    content: '';
    @apply absolute inset-0 bg-gradient-to-br from-green-500/5 to-transparent rounded-xl;
  }
  
  .skill-icon {
    @apply w-12 h-12 bg-green-500/10 rounded-lg flex items-center justify-center mb-4 group-hover:bg-green-500/20 transition-colors;
  }
}

/* Code background pattern */
.bg-code-pattern {
  position: relative;
}

.bg-code-pattern::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    url("data:image/svg+xml,%3Csvg width='200' height='200' viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='20' y='20' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Eimport React from 'react'%3C/text%3E%3Ctext x='20' y='40' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Econst [state, setState] = useState()%3C/text%3E%3Ctext x='20' y='60' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3EuseEffect(() => {})%3C/text%3E%3Ctext x='20' y='80' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Efunction App() {%3C/text%3E%3Ctext x='20' y='100' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Ereturn (%3C/text%3E%3Ctext x='20' y='120' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3E&lt;div className=''&gt;%3C/text%3E%3Ctext x='20' y='140' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Econst handleClick = () => {}%3C/text%3E%3Ctext x='20' y='160' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3E.then(data => setData(data))%3C/text%3E%3Ctext x='20' y='180' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.4)'%3Eexport default Component%3C/text%3E%3C/svg%3E"),
    url("data:image/svg+xml,%3Csvg width='200' height='200' viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='20' y='20' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3Easync function fetchData() {%3C/text%3E%3Ctext x='20' y='40' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3Econst response = await fetch()%3C/text%3E%3Ctext x='20' y='60' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3E&lt;Router&gt;&lt;Routes&gt;%3C/text%3E%3Ctext x='20' y='80' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3Eimport { useState } from 'react'%3C/text%3E%3Ctext x='20' y='100' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3E.map(item => (%3C/text%3E%3Ctext x='20' y='120' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3E&lt;Component key={id} /&gt;%3C/text%3E%3Ctext x='20' y='140' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3Eexport const api = {%3C/text%3E%3Ctext x='20' y='160' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3Econst theme = createTheme()%3C/text%3E%3Ctext x='20' y='180' font-family='monospace' font-size='10' fill='rgba(74, 222, 128, 0.3)'%3E&lt;Provider store={store}&gt;%3C/text%3E%3C/svg%3E");
  background-size: 200px 200px;
  background-position: 0 0, 100px 100px;
  opacity: 600;
  pointer-events: none;
  z-index: 0;
  background-repeat: repeat;
}

/* Enhanced Scroll Animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
  opacity: 0;
}

.scroll-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-reveal.visible {
  opacity: 1;
  transform: translateY(0);
}

.glow-green {
  box-shadow: 0 0 25px rgba(74, 222, 128, 0.2);
}

.gradient-text {
  background: linear-gradient(to right, #4ade80, #22c55e);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Enhanced focus styles */
input:focus, textarea:focus {
  box-shadow: 0 0 0 2px rgba(74, 222, 128, 0.2);
}

/* Smooth Scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #1e293b;
}

::-webkit-scrollbar-thumb {
  background: #4ade80;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: #22c55e;
}

/* Section transitions */
.section-enter {
  opacity: 0;
  transform: translateY(20px);
}

.section-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

/* Parallax effect */
.parallax {
  transform: translateY(var(--scroll-offset));
  transition: transform 0.1s ease-out;
  will-change: transform;
}

/* Gradient overlay on scroll */
.gradient-overlay {
  background: linear-gradient(180deg, 
    rgba(15, 23, 42, 0) 0%,
    rgba(15, 23, 42, 0.8) 50%,
    rgba(15, 23, 42, 1) 100%
  );
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 200px;
  pointer-events: none;
  z-index: 10;
  opacity: var(--scroll-opacity);
  transition: opacity 0.3s ease;
}